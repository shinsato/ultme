function setupDB(e){e.executeSql("CREATE TABLE IF NOT EXISTS user (id INTEGER UNIQUE,account_id INTEGER,name TEXT,email TEXT,password TEXT,tile_list TEXT, created NUMERIC, modified NUMERIC,deleted NUMERIC)"),e.executeSql('CREATE TABLE IF NOT EXISTS tile (id INTEGER UNIQUE,user_id INTEGER,account_id INTEGER,name TEXT,type TEXT NOT NULL DEFAULT "tally",status TEXT NOT NULL DEFAULT "active",options TEXT,min INTEGER,max INTEGER,created NUMERIC,modified NUMERIC,archived NUMERIC,deleted NUMERIC)'),e.executeSql("CREATE TABLE IF NOT EXISTS response (id INTEGER UNIQUE,account_id INTEGER,user_id INTEGER,tile_id INTEGER,value INTEGER,geolocation TEXT,created NUMERIC)")}function setupDB(e){e.executeSql("CREATE TABLE IF NOT EXISTS user (id INTEGER UNIQUE,account_id INTEGER,name TEXT,email TEXT,password TEXT,tile_order TEXT, created NUMERIC, modified NUMERIC,deleted NUMERIC)"),e.executeSql('CREATE TABLE IF NOT EXISTS tile (id INTEGER UNIQUE,user_id INTEGER,account_id INTEGER,name TEXT,type TEXT NOT NULL DEFAULT "tally",status TEXT NOT NULL DEFAULT "active",options TEXT,min INTEGER,max INTEGER,created NUMERIC,modified NUMERIC,archived NUMERIC,deleted NUMERIC)'),e.executeSql("CREATE TABLE IF NOT EXISTS response (id INTEGER UNIQUE,account_id INTEGER,user_id INTEGER,tile_id INTEGER,value INTEGER,geolocation TEXT,created NUMERIC)")}function updateTileOrder(e){$("#container .item").each(function(e,t){order=[],$e=$(t),""!=$e.data("rowid")&&order.push($e.data("rowid"))})}var app={initialize:function(){function e(){app.db.transaction(function(e){e.executeSql('INSERT INTO tile (name,type) VALUES("Did you drink coffee?","binary")')}),app.db.transaction(function(e){e.executeSql('INSERT INTO tile (name,type) VALUES("How many cups?","tally")')}),app.db.transaction(function(e){e.executeSql('INSERT INTO tile (name,type) VALUES("Are you glad you did?","binary")')}),app.db.transaction(function(e){e.executeSql('INSERT INTO tile (name,type) VALUES("How many red lights?","tally")')}),app.db.transaction(function(e){e.executeSql('INSERT INTO tile (name,type,min,max) VALUES("How would you rate today?","scale",-5,5)')})}function t(){app.db.transaction(function(e){e.executeSql("DROP TABLE user")}),app.db.transaction(function(e){e.executeSql("DROP TABLE tile")}),app.db.transaction(function(e){e.executeSql("DROP TABLE response")})}this.bindEvents(),this.initDb()},bindEvents:function(){document.addEventListener("deviceready",this.onDeviceReady,!1),document.addEventListener("documentready",this.onDeviceReady,!1)},onDeviceReady:function(){app.receivedEvent("deviceready"),this.initDb()},receivedEvent:function(e){var t=document.getElementById(e),a=t.querySelector(".listening"),i=t.querySelector(".received");a.setAttribute("style","display:none;"),i.setAttribute("style","display:block;"),window.console.log("Received Event: "+e)},initDb:function(){app.db=window.openDatabase("ultme","1.0","Ultimately Me",1e6),app.db.transaction(setupDB),this.createUserIfNotExists()},createUserIfNotExists:function(){app.db.transaction(function(e){e.executeSql("SELECT *,rowid FROM user",[],function(e,t){var a=t.rows.length;a>0?app.userid=t.rows.item(0).rowid:app.db.transaction(function(e){(new Date).getTime();var t=Date.now();e.executeSql("INSERT INTO user (created) VALUES(?)",[t],function(e,t){app.userid=t.insertId})})})})}},saveTallyResponse=function(e,t){"geolocation"in navigator?navigator.geolocation.getCurrentPosition(function(a){var i=a.coords.latitude,n=a.coords.longitude;__saveTallyResponse(e,t,i,n)},function(){__saveTallyResponse(e,t,null,null)}):__saveTallyResponse(e,t,null,null)},__saveTallyResponse=function(e,t,a,i){(new Date).getTime();var n=Date.now(),l="";a&&i&&(l=a+","+i),e.db.transaction(function(a){a.executeSql("INSERT INTO response (tile_id,user_id,value,geolocation,created) VALUES (?,?,?,?,?)",[t,e.userid,1,l,n],function(a,i){updateTallyValue(e,t)})})},updateTallyValue=function(e,t){e.db.transaction(function(e){e.executeSql("SELECT sum(value) as total FROM response WHERE tile_id = ?",[t],function(e,a){var i=a.rows.item(0).total;i=i>0?i:0;var n=$("[data-rowid='"+t+"']"),l=$(n.find(".js-display"));l.text(i),n.attr("data-value",i),n.data("value",i)})})},updateBinaryValue=function(e,t){},updateScaleValue=function(e,t){},init=function(){var e=$("body"),t=$(".overlay"),a=function(e){e.addClass("flash"),setTimeout(function(){e.removeClass("flash")},100)};$('[data-type="tally"]').each(function(e,t){updateTallyValue(app,$(t).data("rowid"))}),$('[data-type="binary"]').each(function(e,t){updateBinaryValue(app,$(t).data("rowid"))}),$('[data-type="scale"]').each(function(e,t){updateScaleValue(app,$(t).data("rowid"))}),$$('[data-type="tally"]').tap(function(){var e=$(this);saveTallyResponse(app,e.data("rowid")),a(e)}),$$('[data-type="binary"]').swipeRight(function(){var e=$(this);e.find(".js-display").text("Yes")}),$$('[data-type="binary"]').swipeLeft(function(){var e=$(this);e.find(".js-display").text("No")}),$$('[data-type="binary"]').tap(function(){}),$$('[data-type="scale"]').tap(function(){}),$$("[toggle-overlay]").on("tap",function(a){a.stopPropagation(),e.toggleClass("overlay-open");var i=$(this).attr("toggle-overlay"),n=$(this).data("type"),l=t.find(".overlay-body");t.removeClass("binary tally scale new").addClass(n),e.hasClass("overlay-open")&&l.html(""),i.length&&l.load(i+".html")})},loadTiles=function(e){var t=[];e.db.transaction(function(e){e.executeSql("SELECT *,rowid FROM tile",[],function(e,a){for(var i=a.rows.length,n=0;i>n;n++)t.push(a.rows.item(n));$("#container").empty();for(var l in t){var o=t[l].type,d=t[l].rowid,s=$('<div class="item '+o+'"></div>'),r=$('<div class="tile-actions"></div>');switch(s.attr("data-value",0),s.attr("data-type",o),s.attr("data-rowid",d),s.data("value",0),s.data("type",o),s.append("<h2>"+t[l].name+"</h2>"),o){case"binary":r.append('<div class="report-cue" data-type="binary" toggle-overlay="overlay/tile-log">&#9776;</div>'),r.append('<div class="edit-cue" data-type="binary" toggle-overlay="overlay/edit">⬡</div>'),s.append('<label class="js-display string">0</label>'),s.append(r),s.attr("toggle-overlay","overlay/tile-binary");break;case"tally":r.append('<div class="report-cue" data-type="tally" toggle-overlay="overlay/tile-log">&#9776;</div>'),r.append('<div class="edit-cue" data-type="tally" toggle-overlay="overlay/edit">⬡</div>'),s.append('<label class="js-display string">0</label>'),s.append(r);break;case"scale":r.append('<div class="report-cue" data-type="scale" toggle-overlay="overlay/tile-log">&#9776;</div>'),r.append('<div class="edit-cue" data-type="scale" toggle-overlay="overlay/edit">⬡</div>'),s.append('<label class="js-display string">0</label>'),s.append(r),s.attr("toggle-overlay","overlay/tile-scale")}$("#container").append(s)}init()},function(e,t){window.console.log("error",e,t)})})};app.initialize(),loadTiles(app),$(document).on("pagecreate","#pageone",function(){$("div").on("click",function(){})}).on("submit","#update-tile",function(){var e=$(this),t=[];if($.each(e.serializeArray(),function(e,a){t[a.name]=a.value}),t["tile-id"]>0);else{(new Date).getTime();var a=Date.now(),i={"label-a":t["label-a"],"label-b":t["label-b"],timebox:t["tile-timebox"]};app.db.transaction(function(e){e.executeSql("INSERT INTO tile (name,user_id,type,options,created,modified) VALUES(?,?,?,?,?,?)",[t["tile-name"],app.userid,t["tile-type"],JSON.stringify(i),a,a],function(e,t){loadTiles(app),$("body").toggleClass("overlay-open"),updateTileOrder(app)})})}return!1});