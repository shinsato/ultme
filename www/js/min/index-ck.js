function setupDB(e){e.executeSql("CREATE TABLE IF NOT EXISTS user (id INTEGER UNIQUE,account_id INTEGER,name TEXT,email TEXT,password TEXT,tile_list TEXT, created NUMERIC, modified NUMERIC,deleted NUMERIC)"),e.executeSql('CREATE TABLE IF NOT EXISTS tile (id INTEGER UNIQUE,user_id INTEGER,account_id INTEGER,name TEXT,type TEXT NOT NULL DEFAULT "tally",status TEXT NOT NULL DEFAULT "active",options TEXT,min INTEGER,max INTEGER,created NUMERIC,modified NUMERIC,archived NUMERIC,deleted NUMERIC)'),e.executeSql("CREATE TABLE IF NOT EXISTS response (id INTEGER UNIQUE,account_id INTEGER,user_id INTEGER,tile_id INTEGER,value INTEGER,geolocation TEXT,created NUMERIC)")}function setupDB(e){e.executeSql("CREATE TABLE IF NOT EXISTS user (id INTEGER UNIQUE,account_id INTEGER,name TEXT,email TEXT,password TEXT,tile_order TEXT, created NUMERIC, modified NUMERIC,deleted NUMERIC)"),e.executeSql('CREATE TABLE IF NOT EXISTS tile (id INTEGER UNIQUE,user_id INTEGER,account_id INTEGER,name TEXT,type TEXT NOT NULL DEFAULT "tally",status TEXT NOT NULL DEFAULT "active",options TEXT,min INTEGER,max INTEGER,created NUMERIC,modified NUMERIC,archived NUMERIC,deleted NUMERIC)'),e.executeSql("CREATE TABLE IF NOT EXISTS response (id INTEGER UNIQUE,account_id INTEGER,user_id INTEGER,tile_id INTEGER,value INTEGER,geolocation TEXT,created NUMERIC)")}function updateTileOrder(e){$("#container .item").each(function(e,a){order=[],$e=$(a),""!=$e.data("rowid")&&order.push($e.data("rowid"))})}var app={initialize:function(){function e(){app.db.transaction(function(e){e.executeSql('INSERT INTO tile (name,type) VALUES("Did you drink coffee?","binary")')}),app.db.transaction(function(e){e.executeSql('INSERT INTO tile (name,type) VALUES("How many cups?","tally")')}),app.db.transaction(function(e){e.executeSql('INSERT INTO tile (name,type) VALUES("Are you glad you did?","binary")')}),app.db.transaction(function(e){e.executeSql('INSERT INTO tile (name,type) VALUES("How many red lights?","tally")')}),app.db.transaction(function(e){e.executeSql('INSERT INTO tile (name,type,min,max) VALUES("How would you rate today?","scale",-5,5)')})}function a(){app.db.transaction(function(e){e.executeSql("DROP TABLE user")}),app.db.transaction(function(e){e.executeSql("DROP TABLE tile")}),app.db.transaction(function(e){e.executeSql("DROP TABLE response")})}this.bindEvents(),this.initDb()},bindEvents:function(){document.addEventListener("deviceready",this.onDeviceReady,!1),document.addEventListener("documentready",this.onDeviceReady,!1)},onDeviceReady:function(){app.receivedEvent("deviceready"),this.initDb()},receivedEvent:function(e){var a=document.getElementById(e),t=a.querySelector(".listening"),n=a.querySelector(".received");t.setAttribute("style","display:none;"),n.setAttribute("style","display:block;"),window.console.log("Received Event: "+e)},initDb:function(){app.db=window.openDatabase("ultme","1.0","Ultimately Me",1e6),app.db.transaction(setupDB),this.createUserIfNotExists()},createUserIfNotExists:function(){app.db.transaction(function(e){e.executeSql("SELECT *,rowid FROM user",[],function(e,a){var t=a.rows.length;t>0?app.userid=a.rows.item(0).rowid:app.db.transaction(function(e){(new Date).getTime();var a=Date.now();e.executeSql("INSERT INTO user (created) VALUES(?)",[a],function(e,a){app.userid=a.insertId})})})})}},saveTallyResponse=function(e,a){"geolocation"in navigator?navigator.geolocation.getCurrentPosition(function(t){var n=t.coords.latitude,i=t.coords.longitude;__saveTallyResponse(e,a,n,i)},function(){__saveTallyResponse(e,a,null,null)}):__saveTallyResponse(e,a,null,null)},__saveTallyResponse=function(e,a,t,n){(new Date).getTime();var i=Date.now(),o="";t&&n&&(o=t+","+n),e.db.transaction(function(t){t.executeSql("INSERT INTO response (tile_id,user_id,value,geolocation,created) VALUES (?,?,?,?,?)",[a,e.userid,1,o,i],function(t,n){updateTallyValue(e,a)})})},updateTallyValue=function(e,a){e.db.transaction(function(e){e.executeSql("SELECT sum(value) as total FROM response WHERE tile_id = ?",[a],function(e,t){var n=t.rows.item(0).total;n=n>0?n:0;var i=$("[data-rowid='"+a+"']"),o=$(i.find(".js-display"));o.text(n),i.attr("data-value",n),i.data("value",n)})})},saveBinaryResponse=function(e,a,t){"geolocation"in navigator?navigator.geolocation.getCurrentPosition(function(n){var i=n.coords.latitude,o=n.coords.longitude;__saveBinaryResponse(e,a,t,i,o)},function(){__saveBinaryResponse(e,a,t,null,null)}):__saveBinaryResponse(e,a,t,null,null)},__saveBinaryResponse=function(e,a,t,n,i){(new Date).getTime();var o=Date.now(),l="";n&&i&&(l=n+","+i),e.db.transaction(function(n){n.executeSql("INSERT INTO response (tile_id,user_id,value,geolocation,created) VALUES (?,?,?,?,?)",[a,e.userid,t,l,o],function(n,i){updateBinaryValue(e,a,t)})})},updateBinaryValue=function(e,a){e.db.transaction(function(e){e.executeSql("SELECT response.value, tile.options FROM response left join tile on reponse.tile_id = tile.tile_id WHERE response.tile_id = ? ORDER BY id DESC LIMIT 1",[a],function(e,t){var n=$("[data-rowid='"+a+"']"),i=$(n.find(".js-display"));if(t.rows.length>0){var o=t.rows.item(0).value,l=t.rows.item(0).options,s="";s=o>0?l["label-b"]:l["label-a"],i.text(s),n.attr("data-value",s),n.data("value",s)}else i.text("0"),n.attr("data-value","0"),n.data("value","0")})})},saveScaleResponse=function(e,a,t){"geolocation"in navigator?navigator.geolocation.getCurrentPosition(function(n){var i=n.coords.latitude,o=n.coords.longitude;__saveScaleResponse(e,a,t,i,o)},function(){__saveScaleResponse(e,a,t,null,null)}):__saveScaleResponse(e,a,t,null,null)},__saveScaleResponse=function(e,a,t,n,i){(new Date).getTime();var o=Date.now(),l="";n&&i&&(l=n+","+i),e.db.transaction(function(n){n.executeSql("INSERT INTO response (tile_id,user_id,value,geolocation,created) VALUES (?,?,?,?,?)",[a,e.userid,t,l,o],function(n,i){updateScaleValue(e,a,t)})})},updateScaleValue=function(e,a,t){e.db.transaction(function(e){e.executeSql("SELECT value FROM response WHERE tile_id = ?  ORDER BY id DESC LIMIT 1",[a],function(e,t){var n=$("[data-rowid='"+a+"']"),i=$(n.find(".js-display"));if(t.rows.length>0){var o=t.rows.item(0).value;o=o>0?o:0,i.text(o),n.attr("data-value",o),n.data("value",o)}else i.text("0"),n.attr("data-value","0"),n.data("value","0")})})},init=function(){var e=$("body"),a=$(".overlay"),t=function(e){e.addClass("flash"),setTimeout(function(){e.removeClass("flash")},100)};$('[data-type="tally"]').each(function(e,a){updateTallyValue(app,$(a).data("rowid"))}),$('[data-type="binary"]').each(function(e,a){updateBinaryValue(app,$(a).data("rowid"))}),$('[data-type="scale"]').each(function(e,a){updateScaleValue(app,$(a).data("rowid"))}),$$('[data-type="tally"]').tap(function(){var e=$(this);saveTallyResponse(app,e.data("rowid")),t(e)}),$$('[data-type="binary"]').swipeRight(function(e){var a=$(this);console.log(arguments),saveBinaryResponse(app,a.data("rowid"),1)}),$$('[data-type="binary"]').swipeLeft(function(e){var a=$(this);console.log(arguments),saveBinaryResponse(app,a.data("rowid"),0)}),$$('[data-type="scale"]').swipeRight(function(e){var a=5,t=$(this);console.log(arguments),saveScaleResponse(app,t.data("rowid"),a)}),$$('[data-type="scale"]').swipeLeft(function(e){var a=-5,t=$(this);console.log(arguments),saveScaleResponse(app,t.data("rowid"),a)}),$$("[toggle-overlay]").on("tap",function(t){t.stopPropagation(),e.toggleClass("overlay-open");var n=$(this).attr("toggle-overlay"),i=$(this).data("type"),o=a.find(".overlay-body");a.removeClass("binary tally scale new").addClass(i),e.hasClass("overlay-open")&&o.html(""),n.length&&o.load(n+".html")})},loadTiles=function(e){var a=[];e.db.transaction(function(e){e.executeSql("SELECT *,rowid FROM tile",[],function(e,t){for(var n=t.rows.length,i=0;n>i;i++)a.push(t.rows.item(i));$("#container").empty();for(var o in a){var l=a[o].type,s=a[o].rowid,d=$('<div class="item '+l+'"></div>'),r=$('<div class="tile-actions"></div>');switch(d.attr("data-value",0),d.attr("data-type",l),d.attr("data-rowid",s),d.data("value",0),d.data("type",l),d.append("<h2>"+a[o].name+"</h2>"),l){case"binary":r.append('<div class="report-cue" data-type="binary" toggle-overlay="overlay/tile-log">&#9776;</div>'),r.append('<div class="edit-cue" data-type="binary" toggle-overlay="overlay/edit">⬡</div>'),d.append('<label class="js-display string">---</label>'),d.append(r),d.attr("toggle-overlay","overlay/tile-binary");break;case"tally":r.append('<div class="report-cue" data-type="tally" toggle-overlay="overlay/tile-log">&#9776;</div>'),r.append('<div class="edit-cue" data-type="tally" toggle-overlay="overlay/edit">⬡</div>'),d.append('<label class="js-display string">---</label>'),d.append(r);break;case"scale":r.append('<div class="report-cue" data-type="scale" toggle-overlay="overlay/tile-log">&#9776;</div>'),r.append('<div class="edit-cue" data-type="scale" toggle-overlay="overlay/edit">⬡</div>'),d.append('<label class="js-display string">---</label>'),d.append(r),d.attr("toggle-overlay","overlay/tile-scale")}$("#container").append(d)}init()},function(e,a){window.console.log("error",e,a)})})};app.initialize(),loadTiles(app),$(document).on("pagecreate","#pageone",function(){$("div").on("click",function(){})}).on("submit","#update-tile",function(){var e=$(this),a=[];if($.each(e.serializeArray(),function(e,t){a[t.name]=t.value}),a["tile-id"]>0);else{(new Date).getTime();var t=Date.now(),n={"label-a":a["label-a"],"label-b":a["label-b"],timebox:a["tile-timebox"]};app.db.transaction(function(e){e.executeSql("INSERT INTO tile (name,user_id,type,options,created,modified) VALUES(?,?,?,?,?,?)",[a["tile-name"],app.userid,a["tile-type"],JSON.stringify(n),t,t],function(e,a){loadTiles(app),$("body").toggleClass("overlay-open"),updateTileOrder(app)})})}return!1});